#!/bin/bash

# Run this script as sudo/root

# Define variables
current_date=$(date +%Y-%m-%d)
# remote_server=[REMOTE_USER]@[REMOTE_IP]
remote_server2=[REMOTE_USER2]@[REMOTE_IP2]
# remote_directory=[REMOTE_PATH]
remote_directory2=[REMOTE_PATH2]
local_backup_dir=[LOCAL_BACKUP_PATH]
dirs_to_backup=[LOCAL_PATH_TO_BACKUP]

# Exit immediately if any command fails
set -e

# Clean up existing backup
rm -rf "$local_backup_dir"/*

# Stop all containers
for container in $(docker ps -a --format '{{.Names}}')
do
  echo "Stopping container $container..."
  docker stop "$container"
done

# Loop through each container and backup
for container in $(docker ps -a --format '{{.Names}}')
do
  echo "Backing up container $container to $local_backup_dir/$container-$current_date.tar.gz..."
  docker export "$container" | gzip > "$local_backup_dir/$container-$current_date.tar.gz"
done

# Delete existing backup on remote server
echo "Deleting existing backup on $remote_server:$remote_directory..."
# ssh "$remote_server" "rm -rf $remote_directory/container_backup*"
ssh "$remote_server2" "rm -rf $remote_directory2/container_backup*"

# Transfer backup to remote server using rsync
echo "Transferring backup to $remote_server:$remote_directory..."
# rsync -avz "$local_backup_dir" "$remote_server:$remote_directory"
rsync -avz "$local_backup_dir" "$remote_server2:$remote_directory2"

# Transfer user directory to remote server using rsync
echo "Transferring user directory to $remote_server:$remote_directory..."
# rsync -avz "$dirs_to_backup" "$remote_server:$remote_directory"
rsync -avz "$dirs_to_backup" "$remote_server2:$remote_directory2"

# Restart all containers
for container in $(docker ps -a --format '{{.Names}}')
do
  echo "Restarting container $container..."
  docker start "$container"
done

echo "Backup complete."
